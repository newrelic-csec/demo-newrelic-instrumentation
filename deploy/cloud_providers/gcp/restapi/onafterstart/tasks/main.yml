---

# This play require the following variable set
#   newrelic_personal_api_key: "<from user config newrelic credential>"
#   newrelic_account_id: the newrelic account id
#   gcp_project_id: the GCP projectId
#   gcp_auth_kind: should be "serviceaccount"
#   service_account_file: the location of the service account file containing the GCP credentials

# Additional optional fields:
#   newrelic_api_url: the URL for the newrelic REST API, default to main us URL
#   dashboard_name: the dashboard name, otherwise default to "Golden {{ deployment_name }}"

# Testing with EU
# - set_fact:
#     newrelic_api_url: "api.eu.newrelic.com"

- debug:
    msg: "Deploying dashboard for {{ deployment_name }} using REST v2 API"

- fail:
    msg: "A newrelic nrPersonalApiKey is required. Create this entry in your user config file"
  when: newrelic_personal_api_key is not defined

- name: Set default newrelic api url
  set_fact:
    newrelic_api_url: "api.newrelic.com"
  when: newrelic_api_url is undefined
- name: Ensure https api url
  set_fact:
    newrelic_api_url: "https://{{ newrelic_api_url }}"
  when: not newrelic_api_url | regex_search('^https', ignorecase=True)

- debug:
    msg: "Using newrelic_api_url:{{ newrelic_api_url }}"

- name: Set default integration name using deployment_name:{{ deployment_name }}
  set_fact:
    gcp_integration_name: "NewRelic GCP integration {{ deployment_name }}"
  when: gcp_integration_name is undefined

- name: Create payload
  template:
    src: ../../templates/create_gcp_integration.source.gql
    dest: "{{ playbook_dir }}/create_gcp_integration.gql"
  delegate_to: localhost

- name: Prepare POST payload for graphql
  set_fact:
    gql_content: "{{ lookup('file', '{{playbook_dir}}/create_gcp_integration.gql') | replace('\n', ' ') }}"

- name: Create payload file
  template:
    src: ../../templates/gql_query.source.json
    dest: "{{ playbook_dir }}/gql_query.json"
  delegate_to: localhost

- name: Create integration
  shell: "curl -X POST '{{ newrelic_api_url }}/graphql' \
     -H 'Api-Key:{{ newrelic_personal_api_key }}' \
     -L -H 'Content-Type: application/json' \
     -d @{{ playbook_dir }}/gql_query.json"
  register: output_create_integration
  delegate_to: localhost

- name: Output
  debug:
    msg: "output_create_integration:{{output_create_integration}}"

# - name: Parse authLabel
#   set_fact: 
#     workload_id: "{{ existing_workloads.stdout | from_json | json_query(query) }}"
#   vars:
#     query: "authLabel.actor.account.workload.collections[?name=='{{ workload_name }}'] | [0].guid"

- fail:
    msg: "Stop here"
